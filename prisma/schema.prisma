generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model business_owner {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  start_date DateTime  @db.Timestamp(6)
  end_date   DateTime? @db.Timestamp(6)
  status     String    @db.VarChar(255)
  user_id    String    @db.Uuid
  company_id String    @db.Uuid
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime  @default(now()) @db.Timestamp(6)
  company    company   @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model company {
  id             String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description    String?          @db.VarChar(255)
  address        String?          @db.VarChar(255)
  phone_number   String?          @db.VarChar(20)
  name           String           @db.VarChar(255)
  created_at     DateTime         @default(now()) @db.Timestamp(6)
  updated_at     DateTime         @default(now()) @db.Timestamp(6)
  user_id        String           @db.Uuid
  tenant_id      String           @db.VarChar(255)
  business_owner business_owner[]
  user           user             @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  employee       employee[]
  hr_manager     hr_manager[]
}

model employee {
  id            String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  position      String          @db.VarChar(255)
  start_date    DateTime        @db.Timestamp(6)
  end_date      DateTime?       @db.Timestamp(6)
  salary        Int
  status        String          @db.VarChar(255)
  user_id       String          @db.Uuid
  company_id    String          @db.Uuid
  created_at    DateTime        @default(now()) @db.Timestamp(6)
  updated_at    DateTime        @default(now()) @db.Timestamp(6)
  company       company         @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user          user            @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  time_tracking time_tracking[]
}

model hr_manager {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  department String    @db.VarChar(255)
  start_date DateTime  @db.Timestamp(6)
  end_date   DateTime? @db.Timestamp(6)
  salary     Int
  status     String    @db.VarChar(255)
  user_id    String    @db.Uuid
  company_id String    @db.Uuid
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime  @default(now()) @db.Timestamp(6)
  company    company   @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model time_tracking {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  clock_in    DateTime  @db.Timestamp(6)
  clock_out   DateTime? @db.Timestamp(6)
  total_hours Int?
  day         String    @db.VarChar(255)
  employee_id String    @db.Uuid
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  employee    employee  @relation(fields: [employee_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id             String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email          String           @unique @db.VarChar(255)
  firstName      String?          @db.VarChar(255)
  lastName       String?          @db.VarChar(255)
  roq_user_id    String           @db.VarChar(255)
  tenant_id      String           @db.VarChar(255)
  created_at     DateTime         @default(now()) @db.Timestamp(6)
  updated_at     DateTime         @default(now()) @db.Timestamp(6)
  business_owner business_owner[]
  company        company[]
  employee       employee[]
  hr_manager     hr_manager[]
}
